# Udemy-Docker-mastery my cheatsheet
https://www.udemy.com/course/docker-mastery/

--- whats going on in the container
docker history ${IMAGE_NAME} -> shows the chnages in an the image.
docker container ls -> list all the containers
docker container top -> process list in one container
docker container inspect ${CONTAINER_ID} -> details of one container config - json data on how the container was started 
docker iamge     inspect ${IMAGE_ID} -> details of one IMAGE config - json data on how the IMAGE was started 
docker container stats -> performance stats for all the containers. CONTAINER ID,NAME,CPU%,MEM,USAGE/LIMIT,MEM%,NET I/O,BLOCK I/O,PIDS

RUN A CONTAINER:
docker container run -it --name ${CONTAINER_NAME} nginx bash -> overrided the default command with bash & opens a bash terminal or executes the last argument inside the container. use docker inspect command to inspect the json cmd key value.

RUN COMMAND IN A RUNNING DETACHED CONTAINER:
docker container exec -it ${CONTAINER_ID} 'cmd' -> runs an additional process, will run a command with in the running detached container, use bash/sh cmd to start and interactive shell :-D

START A CONTAINER:
docker container start ${CONTAINER_ID} --> starts the ended container if exsists.

PORTS:
docker network ls -> list all the network
NOTE: `bridge` is a docker virtual network that connects the container ports to to the host ports.
docker container run -d -p ${LOCAL_PC_PORT}:${DOCKER_CONTAINER_PORT} --name ${IMAGE_NAME{ nginx
docker container port ${CONTAINER_ID} --> Checks ports status
--- 




- usefull arguments
  --name x -> the container name will be x
  -d -> detached mode
  -e TEST=arun -> passes an enviromental variable into the container.
  -i -> interactive shell Keeps STDIN open.
  -t or -tty -> Allocate a pseudo-TTY

  --help => displays all the sub commands
  
